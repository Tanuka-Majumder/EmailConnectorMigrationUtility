// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package email_connector.proxies;

public class OutgoingEmailConfiguration
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject outgoingEmailConfigurationMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Email_Connector.OutgoingEmailConfiguration";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		OutgoingProtocol("OutgoingProtocol"),
		SSL("SSL"),
		TLS("TLS"),
		SendMaxAttempts("SendMaxAttempts"),
		ServerHost("ServerHost"),
		ServerPort("ServerPort"),
		OutgoingEmailConfiguration_EmailAccount("Email_Connector.OutgoingEmailConfiguration_EmailAccount");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public OutgoingEmailConfiguration(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Email_Connector.OutgoingEmailConfiguration"));
	}

	protected OutgoingEmailConfiguration(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject outgoingEmailConfigurationMendixObject)
	{
		if (outgoingEmailConfigurationMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Email_Connector.OutgoingEmailConfiguration", outgoingEmailConfigurationMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Email_Connector.OutgoingEmailConfiguration");

		this.outgoingEmailConfigurationMendixObject = outgoingEmailConfigurationMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'OutgoingEmailConfiguration.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static email_connector.proxies.OutgoingEmailConfiguration initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return email_connector.proxies.OutgoingEmailConfiguration.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static email_connector.proxies.OutgoingEmailConfiguration initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new email_connector.proxies.OutgoingEmailConfiguration(context, mendixObject);
	}

	public static email_connector.proxies.OutgoingEmailConfiguration load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return email_connector.proxies.OutgoingEmailConfiguration.initialize(context, mendixObject);
	}

	public static java.util.List<email_connector.proxies.OutgoingEmailConfiguration> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<email_connector.proxies.OutgoingEmailConfiguration> result = new java.util.ArrayList<email_connector.proxies.OutgoingEmailConfiguration>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Email_Connector.OutgoingEmailConfiguration" + xpathConstraint))
			result.add(email_connector.proxies.OutgoingEmailConfiguration.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of OutgoingProtocol
	 * @param outgoingprotocol
	 */
	public final email_connector.proxies.ENUM_OutgoingProtocol getOutgoingProtocol()
	{
		return getOutgoingProtocol(getContext());
	}

	/**
	 * @param context
	 * @return value of OutgoingProtocol
	 */
	public final email_connector.proxies.ENUM_OutgoingProtocol getOutgoingProtocol(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.OutgoingProtocol.toString());
		if (obj == null)
			return null;

		return email_connector.proxies.ENUM_OutgoingProtocol.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of OutgoingProtocol
	 * @param outgoingprotocol
	 */
	public final void setOutgoingProtocol(email_connector.proxies.ENUM_OutgoingProtocol outgoingprotocol)
	{
		setOutgoingProtocol(getContext(), outgoingprotocol);
	}

	/**
	 * Set value of OutgoingProtocol
	 * @param context
	 * @param outgoingprotocol
	 */
	public final void setOutgoingProtocol(com.mendix.systemwideinterfaces.core.IContext context, email_connector.proxies.ENUM_OutgoingProtocol outgoingprotocol)
	{
		if (outgoingprotocol != null)
			getMendixObject().setValue(context, MemberNames.OutgoingProtocol.toString(), outgoingprotocol.toString());
		else
			getMendixObject().setValue(context, MemberNames.OutgoingProtocol.toString(), null);
	}

	/**
	 * @return value of SSL
	 */
	public final java.lang.Boolean getSSL()
	{
		return getSSL(getContext());
	}

	/**
	 * @param context
	 * @return value of SSL
	 */
	public final java.lang.Boolean getSSL(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.SSL.toString());
	}

	/**
	 * Set value of SSL
	 * @param ssl
	 */
	public final void setSSL(java.lang.Boolean ssl)
	{
		setSSL(getContext(), ssl);
	}

	/**
	 * Set value of SSL
	 * @param context
	 * @param ssl
	 */
	public final void setSSL(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean ssl)
	{
		getMendixObject().setValue(context, MemberNames.SSL.toString(), ssl);
	}

	/**
	 * @return value of TLS
	 */
	public final java.lang.Boolean getTLS()
	{
		return getTLS(getContext());
	}

	/**
	 * @param context
	 * @return value of TLS
	 */
	public final java.lang.Boolean getTLS(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.TLS.toString());
	}

	/**
	 * Set value of TLS
	 * @param tls
	 */
	public final void setTLS(java.lang.Boolean tls)
	{
		setTLS(getContext(), tls);
	}

	/**
	 * Set value of TLS
	 * @param context
	 * @param tls
	 */
	public final void setTLS(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean tls)
	{
		getMendixObject().setValue(context, MemberNames.TLS.toString(), tls);
	}

	/**
	 * @return value of SendMaxAttempts
	 */
	public final java.lang.Integer getSendMaxAttempts()
	{
		return getSendMaxAttempts(getContext());
	}

	/**
	 * @param context
	 * @return value of SendMaxAttempts
	 */
	public final java.lang.Integer getSendMaxAttempts(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.SendMaxAttempts.toString());
	}

	/**
	 * Set value of SendMaxAttempts
	 * @param sendmaxattempts
	 */
	public final void setSendMaxAttempts(java.lang.Integer sendmaxattempts)
	{
		setSendMaxAttempts(getContext(), sendmaxattempts);
	}

	/**
	 * Set value of SendMaxAttempts
	 * @param context
	 * @param sendmaxattempts
	 */
	public final void setSendMaxAttempts(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer sendmaxattempts)
	{
		getMendixObject().setValue(context, MemberNames.SendMaxAttempts.toString(), sendmaxattempts);
	}

	/**
	 * @return value of ServerHost
	 */
	public final java.lang.String getServerHost()
	{
		return getServerHost(getContext());
	}

	/**
	 * @param context
	 * @return value of ServerHost
	 */
	public final java.lang.String getServerHost(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ServerHost.toString());
	}

	/**
	 * Set value of ServerHost
	 * @param serverhost
	 */
	public final void setServerHost(java.lang.String serverhost)
	{
		setServerHost(getContext(), serverhost);
	}

	/**
	 * Set value of ServerHost
	 * @param context
	 * @param serverhost
	 */
	public final void setServerHost(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String serverhost)
	{
		getMendixObject().setValue(context, MemberNames.ServerHost.toString(), serverhost);
	}

	/**
	 * @return value of ServerPort
	 */
	public final java.lang.Integer getServerPort()
	{
		return getServerPort(getContext());
	}

	/**
	 * @param context
	 * @return value of ServerPort
	 */
	public final java.lang.Integer getServerPort(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.ServerPort.toString());
	}

	/**
	 * Set value of ServerPort
	 * @param serverport
	 */
	public final void setServerPort(java.lang.Integer serverport)
	{
		setServerPort(getContext(), serverport);
	}

	/**
	 * Set value of ServerPort
	 * @param context
	 * @param serverport
	 */
	public final void setServerPort(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer serverport)
	{
		getMendixObject().setValue(context, MemberNames.ServerPort.toString(), serverport);
	}

	/**
	 * @return value of OutgoingEmailConfiguration_EmailAccount
	 */
	public final email_connector.proxies.EmailAccount getOutgoingEmailConfiguration_EmailAccount() throws com.mendix.core.CoreException
	{
		return getOutgoingEmailConfiguration_EmailAccount(getContext());
	}

	/**
	 * @param context
	 * @return value of OutgoingEmailConfiguration_EmailAccount
	 */
	public final email_connector.proxies.EmailAccount getOutgoingEmailConfiguration_EmailAccount(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		email_connector.proxies.EmailAccount result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.OutgoingEmailConfiguration_EmailAccount.toString());
		if (identifier != null)
			result = email_connector.proxies.EmailAccount.load(context, identifier);
		return result;
	}

	/**
	 * Set value of OutgoingEmailConfiguration_EmailAccount
	 * @param outgoingemailconfiguration_emailaccount
	 */
	public final void setOutgoingEmailConfiguration_EmailAccount(email_connector.proxies.EmailAccount outgoingemailconfiguration_emailaccount)
	{
		setOutgoingEmailConfiguration_EmailAccount(getContext(), outgoingemailconfiguration_emailaccount);
	}

	/**
	 * Set value of OutgoingEmailConfiguration_EmailAccount
	 * @param context
	 * @param outgoingemailconfiguration_emailaccount
	 */
	public final void setOutgoingEmailConfiguration_EmailAccount(com.mendix.systemwideinterfaces.core.IContext context, email_connector.proxies.EmailAccount outgoingemailconfiguration_emailaccount)
	{
		if (outgoingemailconfiguration_emailaccount == null)
			getMendixObject().setValue(context, MemberNames.OutgoingEmailConfiguration_EmailAccount.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.OutgoingEmailConfiguration_EmailAccount.toString(), outgoingemailconfiguration_emailaccount.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return outgoingEmailConfigurationMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final email_connector.proxies.OutgoingEmailConfiguration that = (email_connector.proxies.OutgoingEmailConfiguration) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Email_Connector.OutgoingEmailConfiguration";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
